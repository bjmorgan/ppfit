calculation:
    code: pimaim
    exec: /home/c/cor22/scratch/POTFIT/PAW/FITTING/MPI4PY_TEST/SPEED_TEST/TEST_NUMA/TEST/MULTIPLE/pimaim_mpi/pimaim_mpi
    code_mpi: True
    run_configs: mpi4py #serial, pool or mpi4py
    mpi_exec: mpiexec.hydra #mpirun executable for serial and pool runs (mpi4py spawn will handle this otherwise)
    mpi_np: -np          # string for number of processes
    exec_proc: 2    # execute each instance of code over exec_proc processes
    #MPI4PY options:
    no_nodes:  4             # number of nodes
#    host_base: slurm.hosts   # hostfile base name ie slurm.hosts1 is node 1, slurm.hosts2 is node 2 etc
    mpi_options: -genv I_MPI_FABRICS=dapl,ofa,tcp,tmi,ofi --rr --map-by --node --bind-to node -f
                             #  ^ mpi options for main call to mpi config run. 
                             # Probably need something here to restrict processes to run node by node 
                             # and get the distribution correct
                             # last bit -f gives the flag for the host file
    no_cpu_node: 16          # number of cpus per node. No of workers will be int((no_nodes*no_cpu_node)/exec_proc)-1
    no_slaves: 32            # number of workers. Total no of mpi proc to request in submission is no_slaves + 1(master)
    
# scaling factors for the forces, dipoles and stresses
scaling:
    forces: 20.00
    dipoles: 10.00
    stresses: 5.0

verbose: True

# Nelder-Mead options
method: Nelder-Mead
tolerance:
    xtol: 0.001   # Relative error in solution xopt acceptable for convergence
    ftol: 0.001   # Relative error in fun(xopt) acceptable for convergence
maxfev: 500       # Maximum number of funtion evaluations to make
maxiter: 300      # Maximum number of iterations to perform



# CG options
#method: CG
#stepsize: 0.0001  # stepsize to approximate gradient - must be small
#tolerance:
#    gtol: 0.001  # Gradient norm must be less than gtol before successful termination
#    ftol: 0.001
#maxiter: 1     # maximum number of iterations to perform

# L-BFGS-B options
#method: L-BFGS-B
#tolerance:         
#    ftol: 0.001   # convergence tolerance
#    gtol: 0.001   # convergence tolerance
#maxiter:  5       # max number of function evaluations
#stepsize: 0.0005  #jacobian calc stepsize
# ---- BASIN HOPPING -----

use_basin_hopping: True

# Basin hopping parameters   #
basin_hopping:
    calc_order: 1      # Optimization order: 0 for minimization then BH, 1 for BH then minimization
    niter: 1          # Number of BH iterations
    temperature: 15.0
    timestep: 1.00   # Initial step size for use in BH random displacement. 
                     # Recommended 1.00 since steps are in PARAMS file
    niter_success: 5 # max numb of iterations at a minimum

    #----- Minimier PARAMS ( PARAMS above used in intial step if calc_order=0) -----
    method: Nelder-Mead
    tolerance:
        xtol: 0.001   # Relative error in solution xopt acceptable for convergence
        ftol: 0.001   # Relative error in fun(xopt) acceptable for convergence
    maxfev: 100       # Maximum number of funtion evaluations to make
    maxiter: 100      # Maximum number of iterations to perform
    verbose: True     # Print convergence messages

    # CG options
#    method: CG
#    stepsize: 0.000000005  # stepsize to approximate gradient - must be small
#    tolerance:
#        gtol: 0.001  # Gradient norm must be less than gtol before successful termination
#    maxiter: 100     # maximum number of iterations to perform
#    verbose: True    # Print convergence messages

    # L-BFGS-B options
#    method: L-BFGS-B
#    stepsize: 0.000000005
#    tolerance:
#        ftol: 0.001   # convergence tolerance
#        gtol: 0.001   # convergence tolerance
#    maxiter:  100     # max number of function evaluations
#    verbose:  True    # Print convergence messages
